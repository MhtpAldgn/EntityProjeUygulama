<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>